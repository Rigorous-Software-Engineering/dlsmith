import fp
import intern
import souffle_lib
import souffle_types
typedef TBOO = IString
relation Ris_true(_s:TBOO)
Ris_true(string_intern("true")).
typedef Ttxt = IString
relation Re(_x:Tnumber, _t:Ttxt, _y:Tnumber)
relation Rinject()
Re(((10) * (2)), string_intern("10*2"), (20)) :- Ris_true(_).
Re(((10) + (2)), string_intern("10+2"), (12)) :- Ris_true(_).
Re(((10) / (2)), string_intern("10/2"), (5)) :- Ris_true(_).
Re(((1) + ((10) * (2))), string_intern("1+10*2"), (21)) :- Ris_true(_).
Re((((1) + (1)) + ((10) * (2))), string_intern("1+1+10*2"), (22)) :- Ris_true(_).
Re(((((1) * (3)) + (1)) + ((10) * (2))), string_intern("1*3+1+10*2"), (24)) :- Ris_true(_).
Re(((1) + (((20) / (2)) / (5))), string_intern("1+20/2/5"), (3)) :- Ris_true(_).
Re(((((3) * (40)) / (2)) / (5)), string_intern("3*40/2/5"), (12)) :- Ris_true(_).
Re(((((20) / (2)) / (5)) + (1)), string_intern("20/2/5+1"), (3)) :- Ris_true(_).
Re(((- (2)) * (10)), string_intern("-20"), (- (20))) :- Ris_true(_).
Re((- (2)), string_intern("-2"), (- (2))) :- Ris_true(_).
Re((- (- (2))), string_intern("--2"), (2)) :- Ris_true(_).
Re(pow32((2), (pow32((2), ((3) as bit<32>)) as bit<32>)), string_intern("2^2^3"), (256)) :- Ris_true(_).
Re(pow32((10), ((2) as bit<32>)), string_intern("10^2"), (100)) :- Ris_true(_).
Re(((10) % (3)), string_intern("10%3"), (1)) :- Ris_true(_).
Re((pow32((2), ((4) as bit<32>)) % (13)), string_intern("2^4%13"), (3)) :- Ris_true(_).
output relation Rf(_x:Tnumber, _t:Ttxt, _y:Tnumber)
Rf(_x, _t, _y) :- Re(_x, _t, _y), (_x != _y).
relation Rinject1(_a:Tnumber, _b:Tnumber)
Rinject1(_a, _b) :- Rf(_a, _, _b), Re(_x, _y, _b).
relation Rinject2(_a:Tnumber, _b:Tnumber)
Rinject2(_a, _b) :- Rf(_a, _, _b).
relation Rinject3(_a:Tnumber, _b:Tnumber)
Rinject3(_a, _b) :- Re(_a, _, _b).
