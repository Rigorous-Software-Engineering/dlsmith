import fp

output relation D(s: string, d: double)
output relation F(s: string, d: float)
output relation BB(s: string, b: bool)

F("nan_f()", nan_f()).
F("floor_f(32'f0.5)", floor_f(32'f0.5)).
F("ceil_f(32'f0.5)", ceil_f(32'f0.5)).
F("round_f(32'f0.5)", round_f(32'f0.5)).
F("trunc_f(32'f0.5)", trunc_f(32'f0.5)).
F("fract_f(32'f0.5)", fract_f(32'f0.5)).
F("abs_f(32'f0.5)", abs_f(32'f0.5)).
F("signum_f(32'f0.5)", signum_f(32'f0.5)).
F("sqrt_f(32'f0.5)", sqrt_f(32'f0.5)).
F("exp_f(32'f0.5)", exp_f(32'f0.5)).
F("exp2_f(32'f0.5)", exp2_f(32'f0.5)).
F("ln_f(32'f0.5)", ln_f(32'f0.5)).
F("log2_f(32'f0.5)", log2_f(32'f0.5)).
F("log10_f(32'f0.5)", log10_f(32'f0.5)).
F("cbrt_f(32'f0.5)", cbrt_f(32'f0.5)).
F("sin_f(32'f0.5)", sin_f(32'f0.5)).
F("cos_f(32'f0.5)", cos_f(32'f0.5)).
F("tan_f(32'f0.5)", tan_f(32'f0.5)).
F("asin_f(32'f0.5)", asin_f(32'f0.5)).
F("acos_f(32'f0.5)", acos_f(32'f0.5)).
F("atan_f(32'f0.5)", atan_f(32'f0.5)).
F("sinh_f(32'f0.5)", sinh_f(32'f0.5)).
F("cosh_f(32'f0.5)", cosh_f(32'f0.5)).
F("tanh_f(32'f0.5)", tanh_f(32'f0.5)).
F("asinh_f(32'f0.5)", asinh_f(32'f0.5)).
F("acosh_f(32'f0.5)", acosh_f(32'f0.5)).
F("atanh_f(32'f0.5)", atanh_f(32'f0.5)).
F("recip_f(32'f0.5)", recip_f(32'f0.5)).
F("to_degrees_f(32'f0.5)", to_degrees_f(32'f0.5)).
F("to_radians_f(32'f0.5)", to_radians_f(32'f0.5)).
F("atan2_f(32'f0.5, 32'f2.0)", atan2_f(32'f0.5, 32'f2.0)).
BB("is_nan_f(32'f0.5)", is_nan_f(32'f0.5)).
BB("is_infinite_f(32'f0.5)", is_infinite_f(32'f0.5)).
BB("is_finite_f(32'f0.5)", is_finite_f(32'f0.5)).
BB("is_nan_f(nan_f())", is_nan_f(nan_f())).
BB("is_infinite_f(nan_f())", is_infinite_f(nan_f())).
BB("is_finite_f(nan_f())", is_finite_f(nan_f())).
F("mul_add_f(32'f0.5, 32'f2.2, 32'f2.3)", mul_add_f(32'f0.5, 32'f2.2, 32'f2.3)).
F("powi_f(32'f0.5, 32'sd5)", powi_f(32'f0.5, 32'sd5)).
F("powf_f(32'f0.5, 32f'5.0)", powf_f(32'f0.5, 32'f5.0)).
F("log_f(32'f0.5, 32f'2.0)", log_f(32'f0.5, 32'f2.0)).
F("log_f(5E-1, 2.0)", log_f(32'f5E-1, 32'f2.0)).
F("result_unwrap_or_default(parse_f(\"0.02\"))", result_unwrap_or_default(parse_f("0.02"))).
F("result_unwrap_or_default(parse_f(\"blah\"))", result_unwrap_or_default(parse_f("blah"))).

////////////////////////////////

D("nan_d()", nan_d()).
D("floor_d(64'f0.5)", floor_d(64'f0.5)).
D("floor_d(0.6)", floor_d(0.6)).
D("ceil_d(64'f0.5)", ceil_d(64'f0.5)).
D("round_d(64'f0.5)", round_d(64'f0.5)).
D("trunc_d(64'f0.5)", trunc_d(64'f0.5)).
D("fract_d(64'f0.5)", fract_d(64'f0.5)).
D("abs_d(64'f0.5)", abs_d(64'f0.5)).
D("signum_d(64'f0.5)", signum_d(64'f0.5)).
D("sqrt_d(64'f0.5)", sqrt_d(64'f0.5)).
D("exp_d(64'f0.5)", exp_d(64'f0.5)).
D("exp2_d(64'f0.5)", exp2_d(64'f0.5)).
D("ln_d(64'f0.5)", ln_d(64'f0.5)).
D("log2_d(64'f0.5)", log2_d(64'f0.5)).
D("log10_d(64'f0.5)", log10_d(64'f0.5)).
D("cbrt_d(64'f0.5)", cbrt_d(64'f0.5)).
D("sin_d(64'f0.5)", sin_d(64'f0.5)).
D("cos_d(64'f0.5)", cos_d(64'f0.5)).
D("tan_d(64'f0.5)", tan_d(64'f0.5)).
D("asin_d(64'f0.5)", asin_d(64'f0.5)).
D("acos_d(64'f0.5)", acos_d(64'f0.5)).
D("atan_d(64'f0.5)", atan_d(64'f0.5)).
D("sinh_d(64'f0.5)", sinh_d(64'f0.5)).
D("cosh_d(64'f0.5)", cosh_d(64'f0.5)).
D("cosh_d(5e-1)", cosh_d(5e-1)).
D("tanh_d(64'f0.5)", tanh_d(64'f0.5)).
D("asinh_d(64'f0.5)", asinh_d(64'f0.5)).
D("acosh_d(64'f0.5)", acosh_d(64'f0.5)).
D("atanh_d(64'f0.5)", atanh_d(64'f0.5)).
D("recip_d(64'f0.5)", recip_d(64'f0.5)).
D("to_degrees_d(64'f0.5)", to_degrees_d(64'f0.5)).
D("to_radians_d(64'f0.5)", to_radians_d(64'f0.5)).
D("atan2_d(64'f0.5, 64'f2.0)", atan2_d(64'f0.5, 64'f2.0)).
BB("is_nan_d(64'f0.5)", is_nan_d(64'f0.5)).
BB("is_infinite_d(64'f0.5)", is_infinite_d(64'f0.5)).
BB("is_finite_d(64'f0.5)", is_finite_d(64'f0.5)).
BB("is_nan_d(nan_d())", is_nan_d(nan_d())).
BB("is_infinite_d(nan_d())", is_infinite_d(nan_d())).
BB("is_finite_d(nan_d())", is_finite_d(nan_d())).
D("mul_add_d(64'f0.5, 64'f2.2, 64'f2.3)", mul_add_d(64'f0.5, 64'f2.2, 64'f2.3)).
D("powi_d(64'f0.5, 32'sd5)", powi_d(64'f0.5, 32'sd5)).
D("powf_d(64'f0.5, 32f'5.0)", powf_d(64'f0.5, 64'f5.0)).
D("log_d(64'f0.5, 32f'2.0)", log_d(64'f0.5, 64'f2.0)).
D("log_d(0.5, 2.0)", log_d(0.5, 2.0)).
D("result_unwrap_or_default(parse_d(\"0.02\"))", result_unwrap_or_default(parse_d("0.02"))).
D("result_unwrap_or_default(parse_d(\"blah\"))", result_unwrap_or_default(parse_d("blah"))).

input relation FloatsFromRecord(s: string, f: float)
input relation DoublesFromRecord(s: string, d: double)
