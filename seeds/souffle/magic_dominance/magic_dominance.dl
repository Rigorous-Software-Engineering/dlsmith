


.comp Dominance<N>{

      //
      // Start node (singleton)
      //
      .decl start(s:N)

      //
      // Set of edges
      //
      .decl edge(s:N,d:N)

      //
      // Set of nodes
      //
      .decl node(n:N)
      node(x) :- edge(x,_).
      node(x) :- edge(_,x).

      //
      // Non-dominance of input graph
      //
      .decl non_dom(s:N,d:N)
      non_dom(x,y) :- start(x), node(y), x!=y.
      non_dom(x,y) :- non_dom(z,y), edge(z,x), !start(x), x!=y .


      //
      // Dominance of input graph
      //
      .decl dom(s:N,d:N)
      dom(x,y) :- node(x), node(y), !non_dom(x,y).

      //
      // Finds nodes that strictly dominate a node
      //
      .decl s_dom(n:N,d:N)
      s_dom(n,d) :- dom(n,d), n != d.

}


.comp ImmediateDominance<N> : Dominance<N>{

      //
      // Counts the size strictly dominating set
      //
      .decl s_domsize(n:N,s:number)
      s_domsize(n,0) :- start(n).
      s_domsize(n,s) :- s_dom(n,_), s = count : s_dom(n,_).



      //
      // Set of sizes of strictly dominating nodes
      //
      .decl s_domsizes(n:N,d:N,m:number)
      s_domsizes(n,d,s) :- s_dom(n,d), s_domsize(d,s).


      //
      // Max size of strictly dominating nodes.
      //
      .decl s_max_domsize(n:N,s:number)
       s_max_domsize(n,0) :- start(n).
      s_max_domsize(n,y) :- s_domsizes(n,_,_), y = max s : s_domsizes(n,_,s).

      //
      // Immediate Dominator
      //
      .decl imdom(n:N,i:N)
      imdom(n,x) :- s_dom(n,x), s_domsize(x,s), s_max_domsize(n,s).

}


.init ImmDom = ImmediateDominance<number>

ImmDom.edge(1, 2).
ImmDom.edge(1, 3).
ImmDom.edge(2, 3).
ImmDom.edge(4, 3).
ImmDom.edge(8, 3).
ImmDom.edge(3, 4).
ImmDom.edge(8, 4).
ImmDom.edge(4, 5).
ImmDom.edge(4, 6).
ImmDom.edge(5, 7).
ImmDom.edge(6, 7).
ImmDom.edge(10, 7).
ImmDom.edge(7, 8).
ImmDom.edge(8, 9).
ImmDom.edge(8, 10).
ImmDom.edge(9, 1).
ImmDom.start(1).


.decl dominators(n:number,s:number)
.decl immediate_dom(n:number,s:number)

dominators(n,s) :- ImmDom.dom(n,s).
immediate_dom(n,s) :- ImmDom.imdom(n,s).

